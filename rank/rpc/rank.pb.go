// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rank/rpc/rank.proto

package rank

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRanksRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRanksRequest) Reset()         { *m = GetRanksRequest{} }
func (m *GetRanksRequest) String() string { return proto.CompactTextString(m) }
func (*GetRanksRequest) ProtoMessage()    {}
func (*GetRanksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_297acdc7a9f35bb4, []int{0}
}

func (m *GetRanksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRanksRequest.Unmarshal(m, b)
}
func (m *GetRanksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRanksRequest.Marshal(b, m, deterministic)
}
func (m *GetRanksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRanksRequest.Merge(m, src)
}
func (m *GetRanksRequest) XXX_Size() int {
	return xxx_messageInfo_GetRanksRequest.Size(m)
}
func (m *GetRanksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRanksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRanksRequest proto.InternalMessageInfo

func (m *GetRanksRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetRanksResponse struct {
	Currencies           []*Currency `protobuf:"bytes,1,rep,name=Currencies,proto3" json:"Currencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRanksResponse) Reset()         { *m = GetRanksResponse{} }
func (m *GetRanksResponse) String() string { return proto.CompactTextString(m) }
func (*GetRanksResponse) ProtoMessage()    {}
func (*GetRanksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_297acdc7a9f35bb4, []int{1}
}

func (m *GetRanksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRanksResponse.Unmarshal(m, b)
}
func (m *GetRanksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRanksResponse.Marshal(b, m, deterministic)
}
func (m *GetRanksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRanksResponse.Merge(m, src)
}
func (m *GetRanksResponse) XXX_Size() int {
	return xxx_messageInfo_GetRanksResponse.Size(m)
}
func (m *GetRanksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRanksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRanksResponse proto.InternalMessageInfo

func (m *GetRanksResponse) GetCurrencies() []*Currency {
	if m != nil {
		return m.Currencies
	}
	return nil
}

type Currency struct {
	Rank                 int32    `protobuf:"varint,1,opt,name=Rank,proto3" json:"Rank,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_297acdc7a9f35bb4, []int{2}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Currency) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRanksRequest)(nil), "rank.GetRanksRequest")
	proto.RegisterType((*GetRanksResponse)(nil), "rank.GetRanksResponse")
	proto.RegisterType((*Currency)(nil), "rank.Currency")
}

func init() { proto.RegisterFile("rank/rpc/rank.proto", fileDescriptor_297acdc7a9f35bb4) }

var fileDescriptor_297acdc7a9f35bb4 = []byte{
	// 207 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4a, 0xcc, 0xcb,
	0xd6, 0x2f, 0x2a, 0x48, 0xd6, 0x07, 0x31, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x58, 0x40,
	0x6c, 0x25, 0x75, 0x2e, 0x7e, 0xf7, 0xd4, 0x92, 0xa0, 0xc4, 0xbc, 0xec, 0xe2, 0xa0, 0xd4, 0xc2,
	0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x11, 0x2e, 0xd6, 0x9c, 0xcc, 0xdc, 0xcc, 0x12, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0xd6, 0x20, 0x08, 0x47, 0xc9, 0x89, 0x4b, 0x00, 0xa1, 0xb0, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x8f, 0x8b, 0xcb, 0xb9, 0xb4, 0xa8, 0x28, 0x35, 0x2f, 0x39, 0x33, 0xb5, 0x58,
	0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x88, 0x4f, 0x0f, 0x6c, 0x07, 0x54, 0xbc, 0x32, 0x08, 0x49,
	0x85, 0x92, 0x19, 0x17, 0x07, 0x4c, 0x5c, 0x48, 0x88, 0x8b, 0x05, 0x64, 0x18, 0xd4, 0x12, 0x30,
	0x5b, 0x48, 0x8c, 0x8b, 0x2d, 0xb8, 0x32, 0x37, 0x29, 0x3f, 0x47, 0x82, 0x49, 0x81, 0x51, 0x83,
	0x33, 0x08, 0xca, 0x33, 0xf2, 0xe7, 0x12, 0x08, 0x28, 0xca, 0x4c, 0x4e, 0xcd, 0xc9, 0x2c, 0x2e,
	0x09, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x15, 0xb2, 0xe6, 0xe2, 0x80, 0xb9, 0x47, 0x48, 0x14,
	0x62, 0x27, 0x9a, 0x47, 0xa4, 0xc4, 0xd0, 0x85, 0x21, 0xce, 0x56, 0x62, 0x48, 0x62, 0x03, 0x07,
	0x81, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x3c, 0x00, 0x79, 0x24, 0x19, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PricelistServiceClient is the client API for PricelistService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PricelistServiceClient interface {
	GetRanks(ctx context.Context, in *GetRanksRequest, opts ...grpc.CallOption) (*GetRanksResponse, error)
}

type pricelistServiceClient struct {
	cc *grpc.ClientConn
}

func NewPricelistServiceClient(cc *grpc.ClientConn) PricelistServiceClient {
	return &pricelistServiceClient{cc}
}

func (c *pricelistServiceClient) GetRanks(ctx context.Context, in *GetRanksRequest, opts ...grpc.CallOption) (*GetRanksResponse, error) {
	out := new(GetRanksResponse)
	err := c.cc.Invoke(ctx, "/rank.PricelistService/GetRanks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PricelistServiceServer is the server API for PricelistService service.
type PricelistServiceServer interface {
	GetRanks(context.Context, *GetRanksRequest) (*GetRanksResponse, error)
}

func RegisterPricelistServiceServer(s *grpc.Server, srv PricelistServiceServer) {
	s.RegisterService(&_PricelistService_serviceDesc, srv)
}

func _PricelistService_GetRanks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRanksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PricelistServiceServer).GetRanks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rank.PricelistService/GetRanks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PricelistServiceServer).GetRanks(ctx, req.(*GetRanksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PricelistService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rank.PricelistService",
	HandlerType: (*PricelistServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRanks",
			Handler:    _PricelistService_GetRanks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rank/rpc/rank.proto",
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rank/rank/rank.proto

package rank

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRanksRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRanksRequest) Reset()         { *m = GetRanksRequest{} }
func (m *GetRanksRequest) String() string { return proto.CompactTextString(m) }
func (*GetRanksRequest) ProtoMessage()    {}
func (*GetRanksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_58febef648081654, []int{0}
}

func (m *GetRanksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRanksRequest.Unmarshal(m, b)
}
func (m *GetRanksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRanksRequest.Marshal(b, m, deterministic)
}
func (m *GetRanksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRanksRequest.Merge(m, src)
}
func (m *GetRanksRequest) XXX_Size() int {
	return xxx_messageInfo_GetRanksRequest.Size(m)
}
func (m *GetRanksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRanksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRanksRequest proto.InternalMessageInfo

func (m *GetRanksRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetRanksResponse struct {
	Currencies           []*Currency `protobuf:"bytes,1,rep,name=Currencies,proto3" json:"Currencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRanksResponse) Reset()         { *m = GetRanksResponse{} }
func (m *GetRanksResponse) String() string { return proto.CompactTextString(m) }
func (*GetRanksResponse) ProtoMessage()    {}
func (*GetRanksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_58febef648081654, []int{1}
}

func (m *GetRanksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRanksResponse.Unmarshal(m, b)
}
func (m *GetRanksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRanksResponse.Marshal(b, m, deterministic)
}
func (m *GetRanksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRanksResponse.Merge(m, src)
}
func (m *GetRanksResponse) XXX_Size() int {
	return xxx_messageInfo_GetRanksResponse.Size(m)
}
func (m *GetRanksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRanksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRanksResponse proto.InternalMessageInfo

func (m *GetRanksResponse) GetCurrencies() []*Currency {
	if m != nil {
		return m.Currencies
	}
	return nil
}

type Currency struct {
	Rank                 int32    `protobuf:"varint,1,opt,name=Rank,proto3" json:"Rank,omitempty"`
	Symbol               string   `protobuf:"bytes,2,opt,name=Symbol,proto3" json:"Symbol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_58febef648081654, []int{2}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Currency) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRanksRequest)(nil), "rank.GetRanksRequest")
	proto.RegisterType((*GetRanksResponse)(nil), "rank.GetRanksResponse")
	proto.RegisterType((*Currency)(nil), "rank.Currency")
}

func init() { proto.RegisterFile("rank/rank/rank.proto", fileDescriptor_58febef648081654) }

var fileDescriptor_58febef648081654 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x4a, 0xcc, 0xcb,
	0xd6, 0x87, 0x13, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x92, 0x3a, 0x17,
	0xbf, 0x7b, 0x6a, 0x49, 0x50, 0x62, 0x5e, 0x76, 0x71, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89,
	0x90, 0x08, 0x17, 0x6b, 0x4e, 0x66, 0x6e, 0x66, 0x89, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6b, 0x10,
	0x84, 0xa3, 0xe4, 0xc4, 0x25, 0x80, 0x50, 0x58, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xa4, 0xc7,
	0xc5, 0xe5, 0x5c, 0x5a, 0x54, 0x94, 0x9a, 0x97, 0x9c, 0x99, 0x5a, 0x2c, 0xc1, 0xa8, 0xc0, 0xac,
	0xc1, 0x6d, 0xc4, 0xa7, 0x07, 0xb6, 0x03, 0x2a, 0x5e, 0x19, 0x84, 0xa4, 0x42, 0xc9, 0x8c, 0x8b,
	0x03, 0x26, 0x2e, 0x24, 0xc4, 0xc5, 0x02, 0x32, 0x0c, 0x6a, 0x09, 0x98, 0x2d, 0x24, 0xc6, 0xc5,
	0x16, 0x5c, 0x99, 0x9b, 0x94, 0x9f, 0x23, 0xc1, 0xa4, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe5, 0x19,
	0x79, 0x71, 0x71, 0x83, 0xe4, 0x83, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0xac, 0xb9, 0x38,
	0x60, 0x4e, 0x11, 0x12, 0x85, 0x58, 0x87, 0xe6, 0x07, 0x29, 0x31, 0x74, 0x61, 0x88, 0x8b, 0x95,
	0x18, 0x92, 0xd8, 0xc0, 0xbe, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x91, 0xb6, 0x8d, 0xa9,
	0x15, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RankServiceClient is the client API for RankService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RankServiceClient interface {
	GetRanks(ctx context.Context, in *GetRanksRequest, opts ...grpc.CallOption) (*GetRanksResponse, error)
}

type rankServiceClient struct {
	cc *grpc.ClientConn
}

func NewRankServiceClient(cc *grpc.ClientConn) RankServiceClient {
	return &rankServiceClient{cc}
}

func (c *rankServiceClient) GetRanks(ctx context.Context, in *GetRanksRequest, opts ...grpc.CallOption) (*GetRanksResponse, error) {
	out := new(GetRanksResponse)
	err := c.cc.Invoke(ctx, "/rank.RankService/GetRanks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RankServiceServer is the server API for RankService service.
type RankServiceServer interface {
	GetRanks(context.Context, *GetRanksRequest) (*GetRanksResponse, error)
}

func RegisterRankServiceServer(s *grpc.Server, srv RankServiceServer) {
	s.RegisterService(&_RankService_serviceDesc, srv)
}

func _RankService_GetRanks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRanksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RankServiceServer).GetRanks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rank.RankService/GetRanks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RankServiceServer).GetRanks(ctx, req.(*GetRanksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RankService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rank.RankService",
	HandlerType: (*RankServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRanks",
			Handler:    _RankService_GetRanks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rank/rank/rank.proto",
}
